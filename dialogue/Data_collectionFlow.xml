<?xml version="1.0" encoding="utf-8"?>
<flow name="Data_collectionFlow" package="iristk.app.data_collection" 
	initial="Idle" xmlns:this="iristk.app.data_collection.Data_collectionFlow" xmlns="iristk.flow" 
	xmlns:p="iristk.flow.param" xmlns:agent="iristk.situated.SystemAgentFlow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.situated.SystemAgentFlow SystemAgentFlow.xsd">
	
	<import class="java.util.ArrayList"/>
	<import class="java.util.Date"/>
	
	<param name="agent" type="iristk.situated.SystemAgentFlow"/>

	<var name="child_gender" type="String" value="'male'"/>
	<var name="temp" type="String" value="''"/>
	
	<var name="system" type="iristk.situated.SystemAgent" value="agent.getSystemAgent()"/> 
	
	 
	 <!-- Whether to use furhat or avatar for the game. If using avatar value="'system'"-->
	<var name="current_agent" type="String" value="'system'"/>	
	<var name="text_to_speak" type="String"/>	
	<var name="gender_str" type="String"/>		

	<!-- MAIN FLOW -->

	<state id="Idle" extends="Dialog">
		<onevent name="athena.games.sums.male">
			<exec>
				child_gender = "male"
			</exec>
		</onevent>
		<onevent name="athena.games.sums.female">
			<exec>
				child_gender = "female"
			</exec>
		</onevent>
	</state>

	<state id="Sums_Start" extends="Dialog">
	<onentry>
		<call state="agent_speak" p:text="'Θέλω να μάθω να προσθέτω αριθμούς έως το 4.'" p:agent="'system'"/>
		<if cond="child_gender.equals('male')">
			<call state="agent_speak" p:text="'Εσύ είσαι πολύ καλός σε αυτό. Μπορείς να με βοηθήσεις να μάθω;'" p:agent="'system'"/>
		<else/>
			<call state="agent_speak" p:text="'Εσύ είσαι πολύ καλή σε αυτό. Μπορείς να με βοηθήσεις να μάθω;'" p:agent="'system'"/>
		</if>
		<call state="agent_speak" p:text="'Κάθε φορά που κάνεις κάτι σωστό θα σου χαμογελάω.'" p:agent="'system'"/>
		<call state="zeno_animation" p:name="'IROS_animations/happiness.anim.xml'"/>
		<wait msec="5000"/>
		<call state="agent_speak" p:text="'Τι λες να ξεκινήσεις εσύ;'" p:agent="'system'"/>
		<call state="zeno_animation" p:name="'IROS_animations/neutral.anim.xml'"/>
	</onentry>
	<onevent name="athena.games.sums.start.respond" cond="event:text!=null">
		<if cond="(event:text).equals('yes')">
			<goto state="Child_Sum"/>
		<else/>
			<goto state="Idle"/>
		</if>
	</onevent>
</state>

<state id="Child_Sum" extends="Dialog">
	<onentry>
		<call state="agent_speak" p:text="'Σε παρακαλώ φτιάξε ένα εσύ να δω.'" p:agent="'system'"/>
		<send event="athena.games.sums.enablecards"/>
	</onentry>
	<onevent name="athena.games.sums.reask1">
		<call state="agent_speak" p:text="'Ποιό νούμερο είναι το σωστό; Μπορείς σε παρακαλώ να μου το δείξεις;'" p:agent="'system'"/>
	</onevent>
	<onevent name="athena.games.sums.reask2">
		<call state="agent_speak" p:text="'Δείξε μου εσύ το σωστό για να το δω.'" p:agent="'system'"/>
	</onevent>
	<onevent name="athena.games.sums.reask3">
		<call state="agent_speak" p:text="'Πρέπει να φτιάξεις ένα εσύ για να το δω και να το μάθω.'" p:agent="'system'"/>
	</onevent>
	<onevent name="athena.games.sums.sumcorrect">
		<if cond="child_gender.equals('male')">
			<call state="agent_speak" p:text="'Μπράβο! Είσαι πολύ καλός! Ευχαριστώ!'" p:agent="'system'"/>
		<else/>
			<call state="agent_speak" p:text="'Μπράβο! Είσαι πολύ καλή! Ευχαριστώ!'" p:agent="'system'"/>
		</if>
		<call state="zeno_animation" p:name="'IROS_animations/happiness.anim.xml'"/>
		<wait msec="5000"/>
		<call state="zeno_animation" p:name="'IROS_animations/neutral.anim.xml'"/>
	</onevent>
	<onevent name="athena.games.sums.sumwrong">
		<call state="agent_speak" p:text="'Ωχ! Έγινε κάτι λάθος; Δεν πειράζει, ξαναπροσπάθησε.'" p:agent="'system'"/>
		<send event="athena.games.sums.enablecards"/>
	</onevent>
</state>

<state id="Wrong_Robot_Sum" extends="Dialog">
	<onentry>
		<call state="agent_speak" p:text="'Σειρά μου τώρα. Ας δοκιμάσω εγώ ένα.'" p:agent="'system'"/>
		<wait msec="500"/>
		<send event="athena.games.sums.robotwrongsum.select"/>
	</onentry>
	<onevent name="athena.games.sums.robotsumready">
		<exec>temp = asString(event:text)</exec>
		<call state="agent_speak" p:text="'Νομίζω ότι το σωστό είναι ο αριθμός ' + temp" p:agent="'system'"/>
		<wait msec="500"/>
		<send event="athena.games.sums.robotsum.make"/>
	</onevent>
	<onevent name="athena.games.sums.robotwrongnumber">
		<wait msec="500"/>
		<call state="agent_speak" p:text="'Ωχ! Έκανα λάθος!'" p:agent="'system'"/>
		<call state="zeno_animation" p:name="'IROS_animations/sadness.anim.xml'"/>
		<wait msec="5000"/>
		<call state="zeno_animation" p:name="'IROS_animations/neutral.anim.xml'"/>
		<send event="athena.games.sums.enablecards"/>
	</onevent>
	<onevent name="athena.games.sums.sumwrong">
		<send event="athena.games.sums.enablecards"/>
	</onevent>
	<onevent name="athena.games.sums.sumcorrect">
		<call state="agent_speak" p:text="'Μπράβο! Ευχαριστώ για τη βοήθεια.'" p:agent="'system'"/>
		<call state="zeno_animation" p:name="'IROS_animations/happiness.anim.xml'"/>
	</onevent>
	<onevent name="athena.games.sums.robotwrong.reask1">
		<call state="agent_speak" p:text="'Σε παρακαλώ, δείξε μου το σωστό.'" p:agent="'system'"/>
	</onevent>
	<onevent name="athena.games.sums.robotwrong.reask2">
		<call state="agent_speak" p:text="'Δείξε μου το σωστό γιατί δεν το ξέρω.'" p:agent="'system'"/>
	</onevent>
	<onevent name="athena.games.sums.robotwrong.reask3">
		<call state="agent_speak" p:text="'Πρέπει να μου δείξεις το σωστό για να το μάθω.'" p:agent="'system'"/>
	</onevent>
</state>

<state id="Correct_Robot_Sum" extends="Dialog">
	<onentry>
		<call state="agent_speak" p:text="'Σειρά μου τώρα. Ας δοκιμάσω εγώ ένα.'" p:agent="'system'"/>
		<wait msec="500"/>
		<send event="athena.games.sums.robotcorrectsum.select"/>
	</onentry>
	<onevent name="athena.games.sums.robotsumready">
		<exec>temp = asString(event:text)</exec>
		<call state="agent_speak" p:text="'Νομίζω ότι το σωστό είναι ο αριθμός ' + temp" p:agent="'system'"/>
		<wait msec="500"/>
		<send event="athena.games.sums.robotsum.make"/>
	</onevent>
	<onevent name="athena.games.sums.robotcorrectnumber">
		<wait msec="500"/>
		<call state="agent_speak" p:text="'Ναι! Το βρήκα!'" p:agent="'system'"/>
		<call state="zeno_animation" p:name="'IROS_animations/happiness.anim.xml'"/>
		<wait msec="5000"/>
		<call state="zeno_animation" p:name="'IROS_animations/neutral.anim.xml'"/>
		<send event="athena.games.sums.enablecards"/>
	</onevent>
</state>

<state id="Replay" extends="Dialog">
	<onentry>
		<call state="agent_speak" p:text="'Θες να ξαναπαίξουμε;'" p:agent="'system'"/>
	</onentry>
	<onevent name="athena.games.sums.replay.yes">
		<call state="agent_speak" p:text="'Τέλεια, ας ξαναπαίξουμε.'" p:agent="'system'"/>
		<send event="athena.games.sums.stop"/>
		<wait msec="500"/>
		<send event="athena.games.sums.showcards"/>
		<send event="athena.games.sums.enablecards"/>
		<goto state="Child_Sum"/>
	</onevent>
	<onevent name="athena.games.sums.replay.no">
		<call state="agent_speak" p:text="'Εντάξει, σε ευχαριστώ που με μαθαίνεις.'" p:agent="'system'"/>
		<goto state="Idle"/>
	</onevent>
</state>
	
<!-- EXTENDABLE STATES -->
<state id="Pause" extends="Dialog">
	<onevent name="athena.admin.resume">
		<return/>
	</onevent>
</state>

<state id="Dialog">
	<onevent name="athena.admin.zenohappy">
		<call state="zeno_animation" p:name="'IROS_animations/happiness.anim.xml'"/>
	</onevent>
	<onevent name="athena.admin.zenosad">
		<call state="zeno_animation" p:name="'IROS_animations/sadness.anim.xml'"/>
	</onevent>
	<onevent name="athena.admin.zenoneutral">
		<call state="zeno_animation" p:name="'IROS_animations/neutral.anim.xml'"/>
	</onevent>
	<onevent name="athena.admin.zenomovement">
		<call state="zeno_animation" p:name="'asdsad'"/>
	</onevent>
	<onevent name="athena.admin.pause">
		<call state="Pause"/>
	</onevent>
	<onevent name="athena.games.sums.idle">
		<goto state="Idle"/>
	</onevent>
	<onevent name="athena.games.sums.start">
		<goto state="Sums_Start"/>
	</onevent>
	<onevent name="athena.games.sums.childsum">
		<goto state="Child_Sum"/>
	</onevent>
	<onevent name="athena.games.sums.gotorobotwrongsum">
		<goto state="Wrong_Robot_Sum"/>
	</onevent>
	<onevent name="athena.games.sums.gotorobotcorrectsum">
		<goto state="Correct_Robot_Sum"/>
	</onevent>
	<onevent name="athena.games.sums.gotoreplay">
		<goto state="Replay"/>
	</onevent>
</state>
	
	<!-- CALLABLE STATES -->

	<state id="agent_speak">
		<param name="text" help="The text to speak (can also be provided as a text node)"/>
		<param name="agent" help="The text to speak (can also be provided as a text node)"/>
		<var name="action"/>
		<onentry>
			<send event="action.speech" 
					p:text="text"
					p:agent="agent"
					bindId="action"/>
		</onentry>
		<onevent name="monitor.speech.done">
			<return event="monitor.speech.done"/>
		</onevent>
	</state>

	<state id="zeno_animation">
		<param name="name" help="The text to speak (can also be provided as a text node)"/>
		<var name="action"/>
		<onentry>
			<send event="athena.zeno.behavior" 
					p:name="name"
					bindId="action"/>
			<return/>
		</onentry>
	</state>
	
	<state id="zeno_movement">
		<param name="shoulder_pitch" help="The text to speak (can also be provided as a text node)"/>
		<param name="shoulder_roll" help="The text to speak (can also be provided as a text node)"/>
		<onentry>
			<send event="athena.zeno.movement"
					p:name="shoulder_pitch"
					/>
					<return/>
		</onentry>
   		<onevent name="athena.zeno.movement.done">
			<return event="athena.zeno.movement.done"/>
		</onevent>
	</state>
	
	
</flow>