<?xml version="1.0" encoding="utf-8"?>
<flow name="Data_collectionFlow" package="iristk.app.data_collection" 
    initial="Idle" xmlns:this="iristk.app.data_collection.Data_collectionFlow" xmlns="iristk.flow" 
    xmlns:p="iristk.flow.param" xmlns:agent="iristk.situated.SystemAgentFlow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="iristk.flow flow.xsd iristk.situated.SystemAgentFlow SystemAgentFlow.xsd">
    
    <import class="java.util.ArrayList"/>
    <import class="iristk.app.data_collection.Animal"/>
    <import class="iristk.app.data_collection.FarmFunctions"/>
    <import class="java.util.Date"/>
    
    <param name="agent" type="iristk.situated.SystemAgentFlow"/>
    <param name="animals" type="ArrayList"/>
    <param name="available_objects" type="AvailableObjects"/>

    <var name="child_gender" type="String" value="'male'"/>

    <var name="language" type="String" value="GreekPhrases.LANG_GR"/>
    
    <var name="system" type="iristk.situated.SystemAgent" value="agent.getSystemAgent()"/> 
    
    <var name="listen_sloc" type="boolean"/>
    
    <var name="x" type="float"/>
    <var name="y" type="float"/>
    <var name="z" type="float"/>
    <var name="xb" type="double"/>
    <var name="yb" type="double"/>
    <var name="zb" type="double"/>
    
    <var name="location" type="iristk.situated.Location"/>
     
     <!-- Whether to use furhat or avatar for the game. If using avatar value="'system'"-->
    <var name="current_agent" type="String" value="'system'"/>  
    <var name="text_to_speak" type="String"/>   
    <var name="gender_str" type="String"/>  
    
    <var name="current_pantomime_state" type="String" value="'Pantomime_State_1'"/> 

    <var name="current_nao_behavior" type="String"/>    

    <!-- MAIN FLOW -->

    <state id="Idle" extends="Dialog">
        
    </state>

    <state id="Sums_Start" extends="Dialog">
    <onentry>
        <call state="agent_speak" p:text="'Θέλω να μάθω να προσθέτω αριθμούς έως το 4.'" p:agent="'system'"/>
        <call state="agent_speak" p:text="'Εσύ είσαι πολύ καλός σε αυτό. Μπορείς να με βοηθήσεις;'" p:agent="'system'"/>
        <call state="agent_speak" p:text="'Κάθε φορά που κάνεις κάτι σωστό θα ενισχυτής.'" p:agent="'system'"/>
    </onentry>
    <onevent name="athena.games.sums.start.respond" cond="event:text!=null">
        <if cond="(event:text).equals('yes')">
            <call state="agent_speak" p:text="'Σε παρακαλώ φτιάξε ένα εσύ να δω.'" p:agent="'system'"/>
            <send event="athena.games.sums.enablecards"/>
            <goto state="Child_Sum"/>
        <else/>
            <goto state="Idle"/>
        </if>
    </onevent>
</state>

<state id="Child_Sum" extends="Dialog">
    <onevent name="athena.games.sums.reask1">
        <call state="agent_speak" p:text="'Φτιάξε και εσύ ένα.'" p:agent="'system'"/>
    </onevent>
    <onevent name="athena.games.sums.reask2">
        <call state="agent_speak" p:text="'Πρέπει να φτιάξεις και εσύ ένα για να ενισχυτής.'" p:agent="'system'"/>
    </onevent>
    <onevent name="athena.games.sums.sumcorrect">
        <call state="agent_speak" p:text="'Μπράβο! Είσαι πολύ καλός! Ευχαριστώ!'" p:agent="'system'"/>
        <goto state="Wrong_Robot_Sum"/>
    </onevent>
    <onevent name="athena.games.sums.sumwrong">
        <call state="agent_speak" p:text="'Ωχ! Έγινε κάτι λάθος; Δεν πειράζει, ξαναπροσπάθησε.'" p:agent="'system'"/>
        <send event="athena.games.sums.enablecards"/>
    </onevent>
</state>

<state id="Wrong_Robot_Sum" extends="Dialog">
    <onentry>
        <call state="agent_speak" p:text="'Τώρα θα το κάνω εγώ.'" p:agent="'system'"/>
        <send event="athena.games.sums.robotwrongsum"/>
    </onentry>
    <onevent name="athena.games.sums.robotsumready">
        <call state="agent_speak" p:text="'Το έκανα σωστά;'" p:agent="'system'"/>
    </onevent>
    <onevent name="athena.games.sums.childwrong">
        <call state="agent_speak" p:text="'Δε φαίνεται σωστό. Μπορείς να μου δείξεις το σωστό;'" p:agent="'system'"/>
        <send event="athena.games.sums.childshowcorrect"/>
        <goto state="Wrong_Robot_Sum_Child_Correcting"/>
    </onevent>
    <onevent name="athena.games.sums.childcorrect">
        <send event="athena.games.sums.childshowcorrect"/>
        <goto state="Wrong_Robot_Sum_Child_Correcting"/>
    </onevent>
</state>

<state id="Wrong_Robot_Sum_Child_Correcting" extends="Dialog">
    <onevent name="athena.games.sums.sumwrong">
        <call state="agent_speak" p:text="'Πρέπει να μου δείξεις το σωστό για να ενισχυτής.'" p:agent="'system'"/>
        <send event="athena.games.sums.childshowcorrect"/>
    </onevent>
    <onevent name="athena.games.sums.sumcorrect">
        <call state="agent_speak" p:text="'Μπράβο! Ευχαριστώ!'" p:agent="'system'"/>
        <send event="athena.games.sums.waitforyourwelcome"/>
    </onevent>
    <onevent name="athena.games.sums.yourwelcome" cond="event:text!=null">
        <if cond="(event:text).equals('yes')">
            <goto state="Correct_Robot_Sum"/>
        <else/>
            <call state="agent_speak" p:text="'Πρέπει να πεις παρακαλώ για να ενισχυτής.'" p:agent="'system'"/>
            <send event="athena.games.sums.waitforyourwelcome"/>
        </if>
    </onevent>
</state>

<state id="Correct_Robot_Sum" extends="Dialog">
    <onentry>
        <call state="agent_speak" p:text="'Θα το κάνω πάλι εγώ.'" p:agent="'system'"/>
        <send event="athena.games.sums.robotcorrectsum"/>
    </onentry>
    <onevent name="athena.games.sums.childcongrats" cond="event:text!=null">
        <if cond="(event:text).equals('yes')">
            <goto state="Together_Sum"/>
        <else/>
            <call state="agent_speak" p:text="'Πρέπει να μου πεις μπράβο για να ενισχυτής.'" p:agent="'system'"/>
            <send event="athena.games.sums.childshowcorrect"/>
        </if>
    </onevent>
</state>

<state id="Together_Sum" extends="Dialog">
    <onentry>
        <call state="agent_speak" p:text="'Έλα να κάνουμε ένα μαζί.'" p:agent="'system'"/>
        <send event="athena.games.sums.togethersum"/>
    </onentry>
    <onevent name="athena.games.sums.sumcorrect">
        <call state="agent_speak" p:text="'Μπράβο!'" p:agent="'system'"/>
        <goto state="Replay"/>
    </onevent>
    <onevent name="athena.games.sums.sumwrong">
        <call state="agent_speak" p:text="'Ωχ! Έγινε κάτι λάθος; Δεν πειράζει, ξαναπροσπάθησε.'" p:agent="'system'"/>
        <send event="athena.games.sums.childretry"/>
    </onevent>
    <onevent name="athena.games.sums.childnoaction">
        <call state="agent_speak" p:text="'Πρέπει να βοηθήσεις και εσύ και να βάλεις το επόμενο για να ενισχυτής.'" p:agent="'system'"/>
    </onevent>
</state>

<state id="Replay" extends="Dialog">
    <onentry>
        <call state="agent_speak" p:text="'Ας ξαναπαίξουμε. Φτιάξε ένα άθροισμα.'" p:agent="'system'"/>
        <send event="athena.games.sums.enablecards"/>
        <goto state="Child_Sum"/>
    </onentry>
</state>
    
<!-- EXTENDABLE STATES -->
<state id="Pause" extends="Dialog">
    <onevent name="athena.admin.resume">
        <return/>
    </onevent>
</state>

<state id="Dialog">
    <onevent name="athena.admin.zenodefault">
        <call state="zeno_animation" p:name="'IROS_animations/FitInBox.anim.xml'"/>
    </onevent>
    <onevent name="athena.admin.zenomovement">
        <call state="zeno_animation" p:name="'asdsad'"/>
    </onevent>
    <onevent name="athena.admin.pause">
        <call state="Pause"/>
    </onevent>
    <onevent name="athena.games.sums.idle">
        <goto state="Idle"/>
    </onevent>
    <onevent name="athena.games.sums.start">
        <goto state="Sums_Start"/>
    </onevent>
    <onevent name="athena.agent.attend">
        <if cond="listen_sloc==true">
            <exec> 
                x = (Float) event.get("x");
                y = (Float) event.get("y");
                z =  (Float) event.get("z");
                xb = x;
                yb = y;
                zb = z;
                location = new iristk.situated.Location(xb,yb,zb)
            </exec>
            <call state="agent_attend" p:agent="'system'" p:location="location"/> 
        </if>
    </onevent>
</state>
    
    <!-- CALLABLE STATES -->
    
    <state id="agent_attend">
        <param name="agent"/>
        <param name="location" type="iristk.situated.Location"/>
        <param name="mode" default="'default'"/>
        <param name="speed" default="'medium'"/>
        <onentry>
            <send event="action.gaze" p:location="location" p:agent="agent" p:mode="mode" p:speed="speed"/>
            <return/>
        </onentry>
    </state>

    
    <state id="agent_speak">
        <param name="text" help="The text to speak (can also be provided as a text node)"/>
        <param name="agent" help="The text to speak (can also be provided as a text node)"/>
        <var name="action"/>
        <onentry>
            <send event="action.speech" 
                    p:text="text"
                    p:agent="agent"
                    bindId="action"/>
        </onentry>
        <onevent name="monitor.speech.done">
            <return event="monitor.speech.done"/>
        </onevent>
    </state>
    
    <state id="agent_gesture">
        <param name="name" help="The text to speak (can also be provided as a text node)"/>
        <param name="agent" help="The text to speak (can also be provided as a text node)"/>
        <var name="action"/>
        <onentry>
            <send event="action.gesture" 
                    p:name="name"
                    p:agent="agent"
                    bindId="action"/>
        </onentry>
        <onevent name="monitor.gesture.end">
            <return event="monitor.gesture.end"/>
        </onevent>
    </state>

    <state id="nao_behavior">
        <param name="name" help="The text to speak (can also be provided as a text node)" default="null"/>
        <param name="behavior" help="The text to speak (can also be provided as a text node)" default="null"/>
        <var name="action"/>
        <onentry>
            <if cond="name!=null">
                <send event="athena.nao.behavior" 
                        p:name="name"
                        bindId="action"/>           
            <elseif cond="behavior!=null"/>
                <send event="athena.nao.behavior" 
                        p:behavior="behavior"
                        bindId="action"/>                   
            </if>

        </onentry>
        <onevent name="athena.nao.behavior.done">
            <return event="athena.nao.behavior.done"/>
        </onevent>
    </state>
    
    <state id="zeno_animation">
        <param name="name" help="The text to speak (can also be provided as a text node)"/>
        <var name="action"/>
        <onentry>
            <send event="athena.zeno.behavior" 
                    p:name="name"
                    bindId="action"/>
                    <return/>
        </onentry>
        <onevent name="athena.zeno.behavior.done">
            <return event="athena.zeno.behavior.done"/>
        </onevent>
    </state>
    
    <state id="zeno_movement">
        <param name="shoulder_pitch" help="The text to speak (can also be provided as a text node)"/>
        <param name="shoulder_roll" help="The text to speak (can also be provided as a text node)"/>
        <onentry>
            <send event="athena.zeno.movement"
                    p:name="shoulder_pitch"
                    />
                    <return/>
        </onentry>
        <onevent name="athena.zeno.movement.done">
            <return event="athena.zeno.movement.done"/>
        </onevent>
    </state>
    
    
</flow>